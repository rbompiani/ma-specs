type Blog @model {
  id: ID!
  name: String!
  posts: [Post] @connection(keyName: "byBlog", fields: ["id"])
}

type Post @model @key(name: "byBlog", fields: ["blogID"]) {
  id: ID!
  title: String!
  blogID: ID!
  blog: Blog @connection(fields: ["blogID"])
  comments: [Comment] @connection(keyName: "byPost", fields: ["id"])
}

type Comment @model @key(name: "byPost", fields: ["postID", "content"]) {
  id: ID!
  postID: ID!
  post: Post @connection(fields: ["postID"])
  content: String!
}
type Division @model (
  queries: null,
  mutations: {
    create: "createDivision",
    update: "updateDivision",
    delete: "deleteDivision"
  }
) 
{
  id: Int!
  title: String!
  isOn: Boolean!
  sections: [Section] @connection(name: "DivisionSections")
}

type Section @model (
  queries: null,
  mutations: {
    create: "createSection",
    update: "updateSection",
    delete: "deleteSection"
  }
) 
{
  id: Int!
  title: String!
  isOn: Boolean!
  divisionID: Int!
  division: Division @connection(name: "DivisionSections")
  parts: [Part] @connection(name: "SectionParts")
}

type Part @model (
  queries: null,
  mutations: {
    create: "createPart",
    update: "updatePart",
    delete: "deletePart"
  }
)
{
  id: ID!
  title: String!
  isOn: Boolean!
  sectionID: Int!
  section: Section @connection(name: "SectionParts")
  subPart: [SubPart] @connection(name: "PartSubpart")
}

type SubPart @model (
  queries: null,
  mutations: {
    create: "createSubPart",
    update: "updateSubPart",
    delete: "deleteSubPart"
  }
)
{
  id: ID!
  title: String!
  isOn: Boolean!
  partID: Int!
  part: Part @connection(name: "PartSubpart")
  items: [Item] @connection(name: "SubPartItems")
}

type Item @model (
  queries: null,
  mutations: { 
    create: "createItem",
    update: "updateItem",
    delete: "deleteItem"
    },
) {
  id: ID!
  partID: Int!
  part: SubPart @connection(name: "SubPartItems")
  content: String!
  tier: Int!
}
