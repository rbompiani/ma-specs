
type Project @model
@key(name: "byNumber", fields:["baseType", "id"], queryField: "projectsByNumber" )
{
  id: ID!
  title: String!
  divisionsOn: [Int]
  sectionsOn: [Int]
  paragraphsOn: [Int]
  #content: [Subparagraph] @connection(name:"ProjectSubparagraphs")
  baseType: String!
}
 
type Division @model 
@key(name: "byNumber", fields:["baseType", "id"], queryField: "divisionsByNumber" )
{
  id: ID!
   title: String!
   sections: [Section] @connection(name:"DivisionSections")
   baseType: String!
}
 
type Section @model 
{
  id: ID!
  title: String!
  division: Division! @connection(name:"DivisionSections")
  baseType: String!
  parts: [Part] @connection
}

type Part @model
@key(name:"byId", fields:["baseType", "id"], queryField: "partsByNumber" )
 {
  id: ID!
  title: String!
  paragraphs: [Paragraph] @connection(name:"partParagraphs")
  baseType: String!
 }

type Paragraph @model
 {
  id: ID!
  title: String!
  part: Part! @connection(name:"partParagraphs")
  isStandard: Boolean!
  baseType: String!
}

# type Subparagraph @model
# @key(name: byProject, fields:["project", "section"], queryField: "subparagraphsByProject")
# {
#   id: ID!
#   project: Project! @connection(name:"ProjectSubparagraphs")
#   section: Section! @connection
#   paragraph: Paragraph! @connection
#   orderInParagraph: Int!
#   listTier: Int!
#   content: String!
#   isOn: Boolean!
# }